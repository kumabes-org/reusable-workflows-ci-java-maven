name: "Reusable Workflows CI for Java Maven"

on:
  workflow_call:
    inputs:
      runs-on:
        required: true
        type: string
      environment:
        required: true
        type: string
      working-directory:
        required: true
        type: string
      shell:
        required: true
        type: string
      project-name:
        required: true
        type: string
      java-distribution:
        required: true
        type: string
      java-version:
        required: true
        type: string
      maven-version:
        required: true
        type: string
      maven-build-parameters:
        required: false
        type: string
        default: "-s settings.xml -f pom.xml"
      maven-cli-opts:
        required: false
        type: string
        default: "-T 1C --batch-mode --errors --fail-at-end --show-version -DinstallAtEnd=true -DdeployAtEnd=true "

jobs:
  Build:
    name: Build
    runs-on: ${{ inputs.runs-on }}
    defaults:
      run:
        shell: ${{ inputs.shell }}
        working-directory: ${{ inputs.working-directory }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: ${{ inputs.java-distribution }}
          java-version: ${{ inputs.java-version }}

      - name: "Check Wrapper Exists"
        run: |
          count_maven=$(find . -type f -name mvnw 2>/dev/null | wc -l)
          if [ "${count_maven}" -ge "1" ]; then
            echo "setup_maven=false" >> $GITHUB_ENV
          else
            echo "setup_maven=true" >> $GITHUB_ENV
          fi

      - name: Set up Maven
        if: ${{ env.setup_maven == true }}
        uses: stCarolas/setup-maven@v5
        with:
          maven-version: ${{ inputs.maven-version }}

      - name: Maven Clean and Package
        run: |
          if [[ ${{ env.setup_maven }} == true ]]; then
            echo "Utilizando do instalador"
            mvn ${{ inputs.maven-cli-opts }} package -DskipTests -DskipITs ${{ inputs.maven-build-parameters }};
          else
            echo "Utilizando Wrapper"
            ./mvnw ${{ inputs.maven-cli-opts }} package -DskipTests -DskipITs ${{ inputs.maven-build-parameters }};
          fi

      - uses: actions/upload-artifact@v4
        with:
          name: "${{ inputs.project-name }}-build"
          path: |
            ${{ github.workspace }}/${{ inputs.working-directory }}/target/

  Test:
    name: Test
    runs-on: ${{ inputs.runs-on }}
    defaults:
      run:
        shell: ${{ inputs.shell }}
        working-directory: ${{ inputs.working-directory }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: ${{ inputs.java-distribution }}
          java-version: ${{ inputs.java-version }}

      - name: "Check Wrapper Exists"
        run: |
          count_maven=$(find . -type f -name mvnw 2>/dev/null | wc -l)
          if [ "${count_maven}" -ge "1" ]; then
            echo "setup_maven=false" >> $GITHUB_ENV
          else
            echo "setup_maven=true" >> $GITHUB_ENV
          fi

      - name: Set up Maven
        if: ${{ env.setup_maven == true }}
        uses: stCarolas/setup-maven@v4.3
        with:
          maven-version: ${{ inputs.maven-version }}

      - name: Maven Clean and Package
        run: |
          if [[ ${{ env.setup_maven }} == true ]]; then
            echo "Utilizando do instalador"
            mvn ${{ inputs.maven-cli-opts }} test ${{ inputs.maven-build-parameters }};
            mvn ${{ inputs.maven-cli-opts }} jacoco:report surefire-report:report-only ${{ inputs.maven-build-parameters }};
          else
            echo "Utilizando Wrapper"
            ./mvnw ${{ inputs.maven-cli-opts }} test ${{ inputs.maven-build-parameters }};
            ./mvnw ${{ inputs.maven-cli-opts }} jacoco:report surefire-report:report-only ${{ inputs.maven-build-parameters }};
          fi

      - uses: actions/upload-artifact@v4
        with:
          name: "${{ inputs.project-name }}-test"
          path: |
            ${{ github.workspace }}/${{ inputs.working-directory }}/target/jacoco.exec
            ${{ github.workspace }}/${{ inputs.working-directory }}/target/site
